func get_Roster() -> Model {
  return Model(value:Tuple(name:"Roster",body:[
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary()),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:List(constant:nil, model:Model(value:Chain(types:[
        get_Contact(),
        Model(value:Number())])))),
    Model(value:List(constant:nil,model:get_Room())),
    Model(value:List(constant:nil,model:get_Star())),
    Model(value:List(constant:nil,model:get_Tag())),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Atom(constant:"get")),
        Model(value:Atom(constant:"create")),
        Model(value:Atom(constant:"del")),
        Model(value:Atom(constant:"remove")),
        Model(value:Atom(constant:"nick")),
        Model(value:Atom(constant:"search")),
        Model(value:Atom(constant:"contact")),
        Model(value:Atom(constant:"add")),
        Model(value:Atom(constant:"update")),
        Model(value:Atom(constant:"list")),
        Model(value:Atom(constant:"patch")),
        Model(value:Atom(constant:"last_msg"))]))]))}
