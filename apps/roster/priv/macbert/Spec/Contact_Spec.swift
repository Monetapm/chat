func get_Contact() -> Model {
  return Model(value:Tuple(name:"Contact",body:[
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number()),
        Model(value:List(constant:nil, model:Model(value:Number())))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        get_Message()])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:List(constant:nil,model:get_Feature())),
    Model(value:List(constant:nil,model:get_Service())),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Atom(constant:"online")),
        Model(value:Atom(constant:"offline")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Atom(constant:"request")),
        Model(value:Atom(constant:"authorization")),
        Model(value:Atom(constant:"ignore")),
        Model(value:Atom(constant:"internal")),
        Model(value:Atom(constant:"friend")),
        Model(value:Atom(constant:"last_msg")),
        Model(value:Atom(constant:"ban")),
        Model(value:Atom(constant:"banned")),
        Model(value:Atom(constant:"deleted")),
        Model(value:Atom(constant:"not_existence"))]))]))}
