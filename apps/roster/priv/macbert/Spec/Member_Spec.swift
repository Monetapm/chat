func get_Member() -> Model {
  return Model(value:Tuple(name:"Member",body:[
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:Atom(constant:"chain")),
        Model(value:Atom(constant:"cur")),
        Model(value:List(constant:""))])),
    Model(value:Chain(types:[
        get_muc(),
        get_p2p(),
        Model(value:List(constant:""))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:List(constant:nil)),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number()),
        get_reader()])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:List(constant:nil,model:get_Feature()))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:List(constant:nil,model:get_Service()))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Atom(constant:"online")),
        Model(value:Atom(constant:"offline"))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Atom(constant:"admin")),
        Model(value:Atom(constant:"member")),
        Model(value:Atom(constant:"removed")),
        Model(value:Atom(constant:"patch")),
        Model(value:Atom(constant:"owner"))]))]))}
