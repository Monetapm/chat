func get_Auth() -> Model {
  return Model(value:Tuple(name:"Auth",body:[
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary()),
        Model(value:Tuple(name:nil,body:[
            Model(value:Atom(constant:"fake")),
            Model(value:Binary())]))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Atom(constant:"update")),
        Model(value:Atom(constant:"clear")),
        Model(value:Atom(constant:"delete")),
        Model(value:Atom(constant:"deleted")),
        Model(value:Atom(constant:"logout")),
        Model(value:Atom(constant:"verify")),
        Model(value:Atom(constant:"verified")),
        Model(value:Atom(constant:"expired")),
        Model(value:Atom(constant:"reg")),
        Model(value:Atom(constant:"resend")),
        Model(value:Atom(constant:"voice")),
        Model(value:Atom(constant:"push")),
        Model(value:Atom(constant:"get")),
        Model(value:Tuple(name:nil,body:[
            Model(value:Chain(types:[
                Model(value:Atom(constant:"ver")),
                Model(value:Atom(constant:"reg"))])),
            Model(string): Args: []
]))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:List(constant:nil, model:Model(value:Chain(types:[Model(value:Tuple()),Model(value:Atom()),Model(value:Binary()),Model(value:Number()),Model(value:List(constant:""))])))),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary()),
        Model(value:List(constant:nil,model:get_Feature()))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Binary())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Atom(constant:"ios")),
        Model(value:Atom(constant:"android")),
        Model(value:Atom(constant:"web"))])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())])),
    Model(value:Chain(types:[
        Model(value:List(constant:"")),
        Model(value:Number())]))]))}
